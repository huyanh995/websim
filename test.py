from common import config, combo_generator
import random
import requests
import time
from datetime import datetime
from common import config, utils, simulator, combo_generator
import mysql.connector as mysql

# alpha_ids = ["derrLoJ","EoPxoGG","zXneXN1"]

# signals = combo_generator.get_set_signals("TOP1000","ASI")
# combo = combo_generator.generate_combo(signals, 2, "TOP1000", "ASI")
# print(combo["alpha_code"])

sess = requests.session()
utils.login(sess)
# alpha_codes = []
# alpha_codes[0] = ["group_neutralize(rank( (returns + star_arm_score) / exchange ), subindustry)", "group_neutralize(rank( (returns + star_arm_score) / exchange ), industry)", "group_neutralize(rank( (returns + star_arm_score) / exchange ), sector)", "group_neutralize(rank( (returns + star_arm_score) / exchange ), market)", "group_neutralize(rank( (preferred_dividends + star_rev_surprise_prediction_fy1) / sharesout ), sector)", "group_neutralize(rank( (preferred_dividends + star_rev_surprise_prediction_fy1) / sharesout ), market)", "group_neutralize(rank( (star_eps_surprise_prediction_fy2 + star_eps_smart_estimate_12m) / star_ebitda_surprise_prediction_fy2 ), sector)", "group_neutralize(rank( (star_eps_surprise_prediction_fy2 + star_eps_smart_estimate_12m) / star_ebitda_surprise_prediction_fy2 ), market)", "group_neutralize(rank( (operating_expense + star_arm_global_rank) / star_eps_surprise_prediction_12m ), market)", "group_neutralize(rank( (star_eps_surprise_prediction_12m + star_eps_smart_estimate_fy2) / vwap ), subindustry)", "group_neutralize(rank( (star_eps_surprise_prediction_12m + star_eps_smart_estimate_fy2) / vwap ), industry)", "group_neutralize(rank( (cashflow_op + cash) / liabilities_curr ), industry)", "group_neutralize(rank( (cashflow_op + cash) / liabilities_curr ), sector)", "group_neutralize(rank( (cashflow_op + cash) / liabilities_curr ), market)", "group_neutralize(rank( (star_val_dividend_projection_fy5 + star_eps_fy2_enddate) / star_val_piv_ratio ), subindustry)", "group_neutralize(rank( (star_pm_shortterm + star_rev_surprise_prediction_12m) / star_eps_fy2_enddate ), subindustry)", "group_neutralize(rank( (star_pm_shortterm + star_rev_surprise_prediction_12m) / star_eps_fy2_enddate ), industry)", "group_neutralize(rank( (star_pm_shortterm + star_rev_surprise_prediction_12m) / star_eps_fy2_enddate ), sector)", "group_neutralize(rank( (star_pm_shortterm + star_rev_surprise_prediction_12m) / star_eps_fy2_enddate ), market)", "group_neutralize(rank( (star_sr_coverage + star_rev_fq1_enddate) / industry ), subindustry)", "group_neutralize(rank( (star_sr_coverage + star_rev_fq1_enddate) / industry ), industry)", "group_neutralize(rank( (star_eps_smart_estimate_fy2 + liabilities_cur_oth) / star_rev_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_arm_recommendations_score + star_arm_secondary_earnings_score) / star_eps_surprise_prediction_fy1 ), sector)", "group_neutralize(rank( (star_arm_recommendations_score + star_arm_secondary_earnings_score) / star_eps_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_ebitda_surprise_prediction_fq2 + star_arm_country_rank) / star_sr_country_rank ), sector)", "group_neutralize(rank( (star_ebitda_surprise_prediction_fq2 + star_arm_country_rank) / star_sr_country_rank ), market)", "group_neutralize(rank( (open + star_val_earnings_projection_fy1) / star_rev_surprise_prediction_12m ), market)", "group_neutralize(rank( (star_eps_fq1_enddate + subindustry) / star_eps_surprise_prediction_12m ), sector)", "group_neutralize(rank( (star_eps_fq1_enddate + subindustry) / star_eps_surprise_prediction_12m ), market)", "group_neutralize(rank( (star_ebitda_fy2_enddate + high) / star_eps_surprise_prediction_fy1 ), market)"]
# alpha_codes[1] = ["group_neutralize(rank( (star_arm_global_rank + star_sr_profitability) / star_rev_fy1_enddate ), subindustry)", "group_neutralize(rank( (star_arm_global_rank + star_sr_profitability) / star_rev_fy1_enddate ), industry)", "group_neutralize(rank( (star_eps_surprise_prediction_12m + star_rev_surprise_prediction_fq2) / star_ebitda_analyst_number_fq1 ), market)", "group_neutralize(rank( (operating_income + equity) / cap ), subindustry)", "group_neutralize(rank( (operating_income + equity) / cap ), industry)", "group_neutralize(rank( (operating_income + equity) / cap ), sector)", "group_neutralize(rank( (star_ccr_global_rank + debt_st) / star_eps_surprise_prediction_12m ), sector)", "group_neutralize(rank( (star_ccr_global_rank + debt_st) / star_eps_surprise_prediction_12m ), market)", "group_neutralize(rank( (star_sr_country_rank + goodwill) / star_rev_surprise_prediction_fy2 ), market)", "group_neutralize(rank( (returns + subindustry) / star_ebitda_surprise_prediction_12m ), market)", "group_neutralize(rank( (current_ratio + subindustry) / star_ebitda_fq1_enddate ), subindustry)", "group_neutralize(rank( (star_rev_fy2_enddate + quick_ratio) / star_ebitda_fy2_enddate ), subindustry)", "group_neutralize(rank( (star_rev_fy2_enddate + quick_ratio) / star_ebitda_fy2_enddate ), industry)", "group_neutralize(rank( (star_rev_fy2_enddate + quick_ratio) / star_ebitda_fy2_enddate ), sector)", "group_neutralize(rank( (star_rev_fy2_enddate + quick_ratio) / star_ebitda_fy2_enddate ), market)", "group_neutralize(rank( (star_rev_fy2_enddate + star_rev_surprise_prediction_fq2) / star_eps_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_ebitda_surprise_prediction_fy1 + star_ccr_combined_pd) / low ), subindustry)", "group_neutralize(rank( (star_ebitda_surprise_prediction_fy1 + star_ccr_combined_pd) / low ), industry)", "group_neutralize(rank( (star_ebitda_surprise_prediction_fy1 + star_ccr_combined_pd) / low ), sector)", "group_neutralize(rank( (star_ebitda_surprise_prediction_fy1 + star_ccr_combined_pd) / low ), market)", "group_neutralize(rank( (star_arm_score_change_1m + star_arm_recommendations_score) / star_ccr_region_rank ), subindustry)", "group_neutralize(rank( (star_arm_score_5 + star_arm_country_rank) / star_rev_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_ebitda_surprise_prediction_fy2 + star_ebitda_surprise_prediction_12m) / star_ebitda_analyst_number_fq1 ), sector)", "group_neutralize(rank( (star_ebitda_surprise_prediction_fy2 + star_ebitda_surprise_prediction_12m) / star_ebitda_analyst_number_fq1 ), market)", "group_neutralize(rank( (star_rev_smart_estimate_fy1 + star_arm_secondary_earnings_score) / star_eps_surprise_prediction_fy1 ), sector)", "group_neutralize(rank( (star_rev_smart_estimate_fy1 + star_arm_secondary_earnings_score) / star_eps_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (EBITDA + cashflow_op) / inventory ), subindustry)", "group_neutralize(rank( (EBITDA + cashflow_op) / inventory ), industry)", "group_neutralize(rank( (star_rev_fy1_enddate + star_rev_surprise_prediction_fy2) / star_eps_surprise_prediction_12m ), sector)", "group_neutralize(rank( (star_rev_fy1_enddate + star_rev_surprise_prediction_fy2) / star_eps_surprise_prediction_12m ), market)"]
# alpha_codes[2] = ["group_neutralize(rank( (star_arm_score + star_sr_leverage) / star_eps_fy1_enddate ), subindustry)", "group_neutralize(rank( (star_arm_score + star_sr_leverage) / star_eps_fy1_enddate ), industry)", "group_neutralize(rank( (star_arm_score + star_sr_leverage) / star_eps_fy1_enddate ), sector)", "group_neutralize(rank( (star_arm_score + star_sr_leverage) / star_eps_fy1_enddate ), market)", "group_neutralize(rank( (preferred_dividends + star_eps_smart_estimate_fy2) / open ), industry)", "group_neutralize(rank( (preferred_dividends + star_eps_smart_estimate_fy2) / open ), sector)", "group_neutralize(rank( (star_ccr_global_rank + star_val_earnings_projection_fy13) / star_rev_surprise_prediction_12m ), market)", "group_neutralize(rank( (star_rev_fq1_enddate + equity) / debt_st ), subindustry)", "group_neutralize(rank( (eps + star_arm_secondary_earnings_score) / star_rev_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (quick_ratio + star_pm_region_rank) / star_eps_surprise_prediction_12m ), industry)", "group_neutralize(rank( (quick_ratio + star_pm_region_rank) / star_eps_surprise_prediction_12m ), sector)", "group_neutralize(rank( (quick_ratio + star_pm_region_rank) / star_eps_surprise_prediction_12m ), market)", "group_neutralize(rank( (low + high) / star_eps_surprise_prediction_fy2 ), subindustry)", "group_neutralize(rank( (low + high) / star_eps_surprise_prediction_fy2 ), industry)", "group_neutralize(rank( (low + high) / star_eps_surprise_prediction_fy2 ), sector)", "group_neutralize(rank( (low + high) / star_eps_surprise_prediction_fy2 ), market)", "group_neutralize(rank( (star_ebitda_surprise_prediction_12m + star_eps_surprise_prediction_fy2) / star_rev_smart_estimate_fy1 ), subindustry)", "group_neutralize(rank( (star_ebitda_surprise_prediction_12m + star_eps_surprise_prediction_fy2) / star_rev_smart_estimate_fy1 ), industry)", "group_neutralize(rank( (star_ebitda_surprise_prediction_12m + star_eps_surprise_prediction_fy2) / star_rev_smart_estimate_fy1 ), sector)", "group_neutralize(rank( (star_ebitda_surprise_prediction_12m + star_eps_surprise_prediction_fy2) / star_rev_smart_estimate_fy1 ), market)", "group_neutralize(rank( (star_val_piv_region_rank + market) / star_arm_score_5 ), subindustry)", "group_neutralize(rank( (star_val_piv_region_rank + market) / star_arm_score_5 ), industry)", "group_neutralize(rank( (star_val_piv_region_rank + market) / star_arm_score_5 ), sector)", "group_neutralize(rank( (close + operating_margin) / star_rev_surprise_prediction_fy2 ), industry)", "group_neutralize(rank( (close + operating_margin) / star_rev_surprise_prediction_fy2 ), sector)", "group_neutralize(rank( (close + operating_margin) / star_rev_surprise_prediction_fy2 ), market)", "group_neutralize(rank( (star_val_pe + star_arm_region_rank_decimal) / star_arm_score_5 ), subindustry)", "group_neutralize(rank( (star_val_pe + star_arm_region_rank_decimal) / star_arm_score_5 ), industry)", "group_neutralize(rank( (star_val_pe + star_arm_region_rank_decimal) / star_arm_score_5 ), sector)", "group_neutralize(rank( (star_arm_score_change_1m + star_arm_score_5) / market ), subindustry)"]
# alpha_codes[3] = ["group_neutralize(rank( (star_arm_score_change_1m + star_arm_score_5) / market ), industry)", "group_neutralize(rank( (star_arm_score_change_1m + star_arm_score_5) / market ), sector)", "group_neutralize(rank( (star_arm_score_change_1m + star_arm_score_5) / market ), market)", "group_neutralize(rank( (star_rev_surprise_prediction_fq2 + star_eps_surprise_prediction_fy2) / star_rev_analyst_number_fy1 ), subindustry)", "group_neutralize(rank( (star_rev_surprise_prediction_fq2 + star_eps_surprise_prediction_fy2) / star_rev_analyst_number_fy1 ), industry)", "group_neutralize(rank( (star_rev_surprise_prediction_fq2 + star_eps_surprise_prediction_fy2) / star_rev_analyst_number_fy1 ), sector)", "group_neutralize(rank( (star_rev_surprise_prediction_fq2 + star_eps_surprise_prediction_fy2) / star_rev_analyst_number_fy1 ), market)", "group_neutralize(rank( (star_ccr_sector_rank + star_ebitda_fy2_enddate) / star_arm_score_5 ), subindustry)", "group_neutralize(rank( (star_ccr_sector_rank + star_ebitda_fy2_enddate) / star_arm_score_5 ), industry)", "group_neutralize(rank( (star_ccr_sector_rank + star_ebitda_fy2_enddate) / star_arm_score_5 ), sector)", "group_neutralize(rank( (star_ccr_sector_rank + star_ebitda_fy2_enddate) / star_arm_score_5 ), market)", "group_neutralize(rank( (operating_income + star_eps_fy2_enddate) / star_val_piv_ratio ), subindustry)", "group_neutralize(rank( (star_val_earnings_projection_fy14 + star_val_dividend_projection_fy10) / high ), subindustry)", "group_neutralize(rank( (star_eps_analyst_number_fy1 + star_ebitda_fq1_enddate) / star_eps_surprise_prediction_12m ), market)", "group_neutralize(rank( (star_eps_surprise_prediction_12m + star_eps_surprise_prediction_fq2) / star_eps_smart_estimate_fy2 ), industry)", "group_neutralize(rank( (star_eps_surprise_prediction_12m + star_eps_surprise_prediction_fq2) / star_eps_smart_estimate_fy2 ), sector)", "group_neutralize(rank( (star_eps_surprise_prediction_12m + star_eps_surprise_prediction_fq2) / star_eps_smart_estimate_fy2 ), market)", "group_neutralize(rank( (star_eps_surprise_prediction_fq2 + cash) / cogs ), subindustry)", "group_neutralize(rank( (star_eps_surprise_prediction_fq2 + cash) / cogs ), industry)", "group_neutralize(rank( (star_eps_surprise_prediction_fq2 + cash) / cogs ), sector)", "group_neutralize(rank( (star_eps_surprise_prediction_fq2 + cash) / cogs ), market)", "group_neutralize(rank( (goodwill + star_rev_smart_estimate_12m) / star_eps_surprise_prediction_fy1 ), sector)", "group_neutralize(rank( (goodwill + star_rev_smart_estimate_12m) / star_eps_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_rev_smart_estimate_fq2 + star_rev_smart_estimate_fy1) / star_eps_surprise_prediction_12m ), market)", "group_neutralize(rank( (star_eps_smart_estimate_fy2 + star_arm_secondary_earnings_score) / star_ebitda_surprise_prediction_fy2 ), sector)", "group_neutralize(rank( (star_eps_smart_estimate_fy2 + star_arm_secondary_earnings_score) / star_ebitda_surprise_prediction_fy2 ), market)", "group_neutralize(rank( (returns + star_arm_country_rank) / star_rev_fq2_enddate ), market)", "group_neutralize(rank( (star_arm_recommendations_score + star_val_earnings_projection_fy6) / star_rev_surprise_prediction_12m ), market)", "group_neutralize(rank( (star_eps_surprise_prediction_fq1 + star_rev_surprise_prediction_fy2) / star_rev_analyst_number_fq1 ), sector)", "group_neutralize(rank( (star_eps_surprise_prediction_fq1 + star_rev_surprise_prediction_fy2) / star_rev_analyst_number_fq1 ), market)"]
# alpha_codes[4] = ["group_neutralize(rank( (star_val_earnings_projection_fy14 + return_assets) / low ), subindustry)", "group_neutralize(rank( (star_sr_leverage + star_pm_shortterm) / subindustry ), subindustry)", "group_neutralize(rank( (star_sr_leverage + star_pm_shortterm) / subindustry ), industry)", "group_neutralize(rank( (star_sr_country_rank + star_rev_analyst_number_fy1) / star_rev_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_arm_score + star_eps_analyst_number_fy2) / star_arm_score_5 ), subindustry)", "group_neutralize(rank( (star_arm_score + star_eps_analyst_number_fy2) / star_arm_score_5 ), industry)", "group_neutralize(rank( (star_arm_score + star_eps_analyst_number_fy2) / star_arm_score_5 ), sector)", "group_neutralize(rank( (star_arm_score + star_eps_analyst_number_fy2) / star_arm_score_5 ), market)", "group_neutralize(rank( (star_rev_fy1_enddate + cap) / star_rev_surprise_prediction_fy2 ), market)", "group_neutralize(rank( (star_eps_fy1_enddate + accum_depre) / star_arm_score_5 ), sector)", "group_neutralize(rank( (industry + close) / star_rev_surprise_prediction_12m ), industry)", "group_neutralize(rank( (industry + close) / star_rev_surprise_prediction_12m ), sector)", "group_neutralize(rank( (industry + close) / star_rev_surprise_prediction_12m ), market)", "group_neutralize(rank( (star_ccr_industry_rank + star_rev_fq1_enddate) / star_eps_surprise_prediction_12m ), sector)", "group_neutralize(rank( (star_ccr_industry_rank + star_rev_fq1_enddate) / star_eps_surprise_prediction_12m ), market)", "group_neutralize(rank( (star_ebitda_surprise_prediction_12m + star_arm_score_change_1m) / star_eps_analyst_number_fy2 ), subindustry)", "group_neutralize(rank( (star_ebitda_surprise_prediction_12m + star_arm_score_change_1m) / star_eps_analyst_number_fy2 ), industry)", "group_neutralize(rank( (star_ebitda_surprise_prediction_12m + star_arm_score_change_1m) / star_eps_analyst_number_fy2 ), sector)", "group_neutralize(rank( (star_ebitda_surprise_prediction_12m + star_arm_score_change_1m) / star_eps_analyst_number_fy2 ), market)", "group_neutralize(rank( (star_val_pe + star_arm_recommendations_score) / industry ), subindustry)", "group_neutralize(rank( (star_ebitda_fy2_enddate + star_arm_region_rank_decimal) / star_eps_surprise_prediction_12m ), sector)", "group_neutralize(rank( (star_ebitda_fy2_enddate + star_arm_region_rank_decimal) / star_eps_surprise_prediction_12m ), market)", "group_neutralize(rank( (star_eps_smart_estimate_fq1 + star_rev_smart_estimate_fq1) / star_eps_surprise_prediction_fy1 ), sector)", "group_neutralize(rank( (star_eps_smart_estimate_fq1 + star_rev_smart_estimate_fq1) / star_eps_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_arm_score_change_1m + star_arm_country_rank) / star_rev_fy2_enddate ), subindustry)", "group_neutralize(rank( (star_arm_score_change_1m + star_arm_country_rank) / star_rev_fy2_enddate ), industry)", "group_neutralize(rank( (star_arm_score_change_1m + star_arm_country_rank) / star_rev_fy2_enddate ), sector)", "group_neutralize(rank( (star_arm_score_change_1m + star_arm_country_rank) / star_rev_fy2_enddate ), market)", "group_neutralize(rank( (star_sr_coverage + star_sr_global_rank) / star_eps_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_rev_analyst_number_fq1 + star_arm_score_change_1m) / star_ccr_global_rank ), sector)"]
# alpha_codes[5] = ["group_neutralize(rank( (star_rev_analyst_number_fq1 + star_arm_score_change_1m) / star_ccr_global_rank ), market)", "group_neutralize(rank( (cap + star_arm_country_rank) / star_rev_surprise_prediction_fy1 ), industry)", "group_neutralize(rank( (cap + star_arm_country_rank) / star_rev_surprise_prediction_fy1 ), sector)", "group_neutralize(rank( (cap + star_arm_country_rank) / star_rev_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_ebitda_analyst_number_fq2 + star_pm_shortterm) / star_ebitda_fq2_enddate ), subindustry)", "group_neutralize(rank( (star_ebitda_analyst_number_fq2 + star_pm_shortterm) / star_ebitda_fq2_enddate ), industry)", "group_neutralize(rank( (star_ebitda_analyst_number_fq2 + star_pm_shortterm) / star_ebitda_fq2_enddate ), sector)", "group_neutralize(rank( (star_ebitda_analyst_number_fq2 + star_pm_shortterm) / star_ebitda_fq2_enddate ), market)", "group_neutralize(rank( (debt + ppent_net) / star_eps_surprise_prediction_fy1 ), sector)", "group_neutralize(rank( (debt + ppent_net) / star_eps_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_rev_smart_estimate_fq2 + debt) / star_eps_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_eps_fq1_enddate + star_eps_fy2_enddate) / star_eps_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_arm_score + star_ebitda_surprise_prediction_fq1) / star_sr_coverage ), sector)", "group_neutralize(rank( (star_rev_surprise_prediction_fy1 + star_val_earnings_projection_fy14) / star_rev_surprise_prediction_fy2 ), market)", "group_neutralize(rank( (close + star_ccr_implied_rating) / accum_depre ), subindustry)", "group_neutralize(rank( (close + star_ccr_implied_rating) / accum_depre ), industry)", "group_neutralize(rank( (close + star_ccr_implied_rating) / accum_depre ), sector)", "group_neutralize(rank( (close + star_ccr_implied_rating) / accum_depre ), market)", "group_neutralize(rank( (star_rev_surprise_prediction_fq1 + star_eps_surprise_prediction_fy2) / low ), industry)", "group_neutralize(rank( (fscore_growth + fscore_total) / star_eps_fy2_enddate ), industry)", "group_neutralize(rank( (fscore_growth + fscore_total) / star_eps_fy2_enddate ), sector)", "group_neutralize(rank( (fscore_growth + fscore_total) / star_eps_fy2_enddate ), market)", "group_neutralize(rank( (star_val_earnings_projection_fy10 + star_val_dividend_projection_fy8) / low ), subindustry)", "group_neutralize(rank( (star_ebitda_smart_estimate_fy2 + star_ebitda_fy2_enddate) / star_eps_surprise_prediction_12m ), market)", "group_neutralize(rank( (star_arm_score_change_1m + star_arm_global_rank) / star_sr_liquidity ), subindustry)", "group_neutralize(rank( (star_arm_score_change_1m + star_arm_global_rank) / star_sr_liquidity ), industry)", "group_neutralize(rank( (star_arm_score_change_1m + star_arm_global_rank) / star_sr_liquidity ), sector)", "group_neutralize(rank( (star_eps_analyst_number_fy2 + revenue) / star_eps_surprise_prediction_fy1 ), sector)", "group_neutralize(rank( (star_eps_analyst_number_fy2 + revenue) / star_eps_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_rev_fy2_enddate + star_val_implied5_eps_cagr) / star_val_piv_ratio ), subindustry)"]
# alpha_codes[6] = ["group_neutralize(rank( (star_arm_pref_earnings_score + operating_margin) / star_arm_score_5 ), subindustry)", "group_neutralize(rank( (star_arm_pref_earnings_score + operating_margin) / star_arm_score_5 ), industry)", "group_neutralize(rank( (star_arm_pref_earnings_score + operating_margin) / star_arm_score_5 ), sector)", "group_neutralize(rank( (star_arm_pref_earnings_score + operating_margin) / star_arm_score_5 ), market)", "group_neutralize(rank( (star_eps_analyst_number_fy1 + star_ebitda_surprise_prediction_12m) / star_arm_score_5 ), subindustry)", "group_neutralize(rank( (star_eps_analyst_number_fy1 + star_ebitda_surprise_prediction_12m) / star_arm_score_5 ), sector)", "group_neutralize(rank( (star_eps_analyst_number_fy1 + star_ebitda_surprise_prediction_12m) / star_arm_score_5 ), market)", "group_neutralize(rank( (industry + star_eps_smart_estimate_12m) / star_rev_surprise_prediction_fy1 ), industry)", "group_neutralize(rank( (industry + star_eps_smart_estimate_12m) / star_rev_surprise_prediction_fy1 ), sector)", "group_neutralize(rank( (industry + star_eps_smart_estimate_12m) / star_rev_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_arm_score_change_1m + fscore_momentum) / sector ), sector)", "group_neutralize(rank( (star_arm_global_rank + star_arm_score_change_1m) / star_rev_fy1_enddate ), subindustry)", "group_neutralize(rank( (star_arm_global_rank + star_arm_score_change_1m) / star_rev_fy1_enddate ), industry)", "group_neutralize(rank( (star_arm_global_rank + star_arm_score_change_1m) / star_rev_fy1_enddate ), sector)", "group_neutralize(rank( (star_arm_global_rank + star_arm_score_change_1m) / star_rev_fy1_enddate ), market)", "group_neutralize(rank( (star_arm_global_rank + star_rev_analyst_number_fq1) / star_eps_surprise_prediction_12m ), sector)", "group_neutralize(rank( (star_arm_global_rank + star_rev_analyst_number_fq1) / star_eps_surprise_prediction_12m ), market)", "group_neutralize(rank( (star_val_piv_sector_rank + star_arm_global_rank) / star_ebitda_fq2_enddate ), subindustry)", "group_neutralize(rank( (star_val_piv_region_rank + star_arm_revenue_score) / subindustry ), subindustry)", "group_neutralize(rank( (open + star_rev_smart_estimate_fy1) / star_eps_surprise_prediction_12m ), industry)", "group_neutralize(rank( (open + star_rev_smart_estimate_fy1) / star_eps_surprise_prediction_12m ), sector)", "group_neutralize(rank( (open + star_rev_smart_estimate_fy1) / star_eps_surprise_prediction_12m ), market)", "group_neutralize(rank( (star_eps_surprise_prediction_fq2 + star_arm_country_rank) / star_rev_fq2_enddate ), subindustry)", "group_neutralize(rank( (star_eps_surprise_prediction_fq2 + star_arm_country_rank) / star_rev_fq2_enddate ), industry)", "group_neutralize(rank( (star_eps_surprise_prediction_fq2 + star_arm_country_rank) / star_rev_fq2_enddate ), sector)", "group_neutralize(rank( (star_eps_surprise_prediction_fq2 + star_arm_country_rank) / star_rev_fq2_enddate ), market)", "group_neutralize(rank( (star_rev_surprise_prediction_fy1 + star_arm_score_change_1m) / subindustry ), subindustry)", "group_neutralize(rank( (star_rev_surprise_prediction_fy1 + star_arm_score_change_1m) / subindustry ), industry)", "group_neutralize(rank( (star_rev_surprise_prediction_fy1 + star_arm_score_change_1m) / subindustry ), sector)", "group_neutralize(rank( (star_rev_surprise_prediction_fy1 + star_arm_score_change_1m) / subindustry ), market)"]
# alpha_codes[7] = ["group_neutralize(rank( (star_arm_recommendations_score + depre_amort) / star_eps_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_val_earnings_projection_fy5 + star_val_earnings_projection_fy14) / star_rev_surprise_prediction_fy2 ), market)", "group_neutralize(rank( (debt + star_sr_industr_rank) / star_eps_surprise_prediction_12m ), market)", "group_neutralize(rank( (fscore_surface_accel + star_arm_country_rank) / star_val_piv_ratio ), subindustry)", "group_neutralize(rank( (fscore_surface_accel + star_arm_country_rank) / star_val_piv_ratio ), sector)", "group_neutralize(rank( (star_eps_analyst_number_fq2 + star_sr_profitability) / star_rev_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_arm_global_rank + market) / sector ), subindustry)", "group_neutralize(rank( (star_arm_global_rank + market) / sector ), industry)", "group_neutralize(rank( (star_arm_global_rank + market) / sector ), sector)", "group_neutralize(rank( (star_val_dividend_projection_fy6 + star_ebitda_surprise_prediction_fy2) / star_rev_surprise_prediction_fy1 ), industry)", "group_neutralize(rank( (star_val_dividend_projection_fy6 + star_ebitda_surprise_prediction_fy2) / star_rev_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (debt_st + star_sr_country_rank) / star_rev_surprise_prediction_fy2 ), market)", "group_neutralize(rank( (star_val_piv_region_rank + star_val_pe) / sector ), subindustry)", "group_neutralize(rank( (star_val_piv_region_rank + star_val_pe) / sector ), industry)", "group_neutralize(rank( (star_rev_surprise_prediction_fy2 + star_rev_surprise_prediction_fq2) / star_eps_fy2_enddate ), industry)", "group_neutralize(rank( (star_rev_surprise_prediction_fy2 + star_rev_surprise_prediction_fq2) / star_eps_fy2_enddate ), sector)", "group_neutralize(rank( (star_rev_surprise_prediction_fy2 + star_rev_surprise_prediction_fq2) / star_eps_fy2_enddate ), market)", "group_neutralize(rank( (star_rev_fq1_enddate + industry) / cashflow_op ), subindustry)", "group_neutralize(rank( (market + goodwill) / star_eps_surprise_prediction_12m ), industry)", "group_neutralize(rank( (market + goodwill) / star_eps_surprise_prediction_12m ), sector)", "group_neutralize(rank( (market + goodwill) / star_eps_surprise_prediction_12m ), market)", "group_neutralize(rank( (star_rev_fq2_enddate + low) / cashflow_op ), subindustry)", "group_neutralize(rank( (star_eps_surprise_prediction_fq2 + star_arm_score_change_1m) / star_arm_score_5 ), subindustry)", "group_neutralize(rank( (star_eps_surprise_prediction_fq2 + star_arm_score_change_1m) / star_arm_score_5 ), industry)", "group_neutralize(rank( (star_eps_surprise_prediction_fq2 + star_arm_score_change_1m) / star_arm_score_5 ), sector)", "group_neutralize(rank( (star_eps_surprise_prediction_fq2 + star_arm_score_change_1m) / star_arm_score_5 ), market)", "group_neutralize(rank( (star_val_earnings_projection_fy7 + star_val_fwd10_eps_cagr) / high ), subindustry)", "group_neutralize(rank( (depre + star_arm_pref_earnings_score) / star_eps_surprise_prediction_fy2 ), market)", "group_neutralize(rank( (star_ebitda_fy2_enddate + quick_ratio) / star_eps_surprise_prediction_12m ), sector)", "group_neutralize(rank( (star_ebitda_fy2_enddate + quick_ratio) / star_eps_surprise_prediction_12m ), market)"]
# alpha_codes[8] = ["group_neutralize(rank( (SGA_expense + cashflow_op) / cost_of_revenue ), industry)", "group_neutralize(rank( (SGA_expense + cashflow_op) / cost_of_revenue ), sector)", "group_neutralize(rank( (SGA_expense + cashflow_op) / cost_of_revenue ), market)", "group_neutralize(rank( (open + star_ebitda_fy1_enddate) / star_eps_surprise_prediction_12m ), market)", "group_neutralize(rank( (star_rev_analyst_number_fq2 + assets_curr) / star_rev_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_eps_smart_estimate_fy2 + star_arm_pref_earnings_score) / star_rev_surprise_prediction_fy1 ), industry)", "group_neutralize(rank( (star_eps_smart_estimate_fy2 + star_arm_pref_earnings_score) / star_rev_surprise_prediction_fy1 ), sector)", "group_neutralize(rank( (star_eps_smart_estimate_fy2 + star_arm_pref_earnings_score) / star_rev_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_arm_score + star_rev_surprise_prediction_fq2) / star_arm_score_5 ), subindustry)", "group_neutralize(rank( (star_arm_score + star_rev_surprise_prediction_fq2) / star_arm_score_5 ), industry)", "group_neutralize(rank( (star_arm_score + star_rev_surprise_prediction_fq2) / star_arm_score_5 ), sector)", "group_neutralize(rank( (star_arm_score + star_rev_surprise_prediction_fq2) / star_arm_score_5 ), market)", "group_neutralize(rank( (cashflow_op + capex) / star_eps_smart_estimate_fy2 ), subindustry)", "group_neutralize(rank( (cashflow_op + capex) / star_eps_smart_estimate_fy2 ), industry)", "group_neutralize(rank( (cashflow_op + capex) / star_eps_smart_estimate_fy2 ), sector)", "group_neutralize(rank( (cashflow_op + capex) / star_eps_smart_estimate_fy2 ), market)", "group_neutralize(rank( (star_ebitda_surprise_prediction_12m + star_ccr_combined_pd) / sharesout ), subindustry)", "group_neutralize(rank( (star_ebitda_surprise_prediction_12m + star_ccr_combined_pd) / sharesout ), industry)", "group_neutralize(rank( (star_ebitda_surprise_prediction_12m + star_ccr_combined_pd) / sharesout ), sector)", "group_neutralize(rank( (star_ebitda_surprise_prediction_12m + star_ccr_combined_pd) / sharesout ), market)", "group_neutralize(rank( (goodwill + star_ccr_implied_rating) / star_eps_surprise_prediction_fy2 ), industry)", "group_neutralize(rank( (goodwill + star_ccr_implied_rating) / star_eps_surprise_prediction_fy2 ), sector)", "group_neutralize(rank( (goodwill + star_ccr_implied_rating) / star_eps_surprise_prediction_fy2 ), market)", "group_neutralize(rank( (star_rev_surprise_prediction_fq1 + star_ebitda_surprise_prediction_fy2) / fscore_quality ), industry)", "group_neutralize(rank( (star_ebitda_surprise_prediction_12m + return_equity) / star_rev_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_arm_score_change_1m + star_arm_global_rank) / star_ebitda_fy1_enddate ), subindustry)", "group_neutralize(rank( (star_arm_score_change_1m + star_arm_global_rank) / star_ebitda_fy1_enddate ), industry)", "group_neutralize(rank( (star_arm_score_change_1m + star_arm_global_rank) / star_ebitda_fy1_enddate ), sector)", "group_neutralize(rank( (star_arm_score_change_1m + star_arm_global_rank) / star_ebitda_fy1_enddate ), market)", "group_neutralize(rank( (industry + star_arm_score_5) / star_arm_score_5 ), subindustry)"]
# alpha_codes[9] = ["group_neutralize(rank( (industry + star_arm_score_5) / star_arm_score_5 ), industry)", "group_neutralize(rank( (industry + star_arm_score_5) / star_arm_score_5 ), sector)", "group_neutralize(rank( (industry + star_arm_score_5) / star_arm_score_5 ), market)", "group_neutralize(rank( (star_val_earnings_projection_fy7 + preferred_dividends) / star_rev_surprise_prediction_12m ), market)", "group_neutralize(rank( (sector + debt_st) / accum_depre ), market)", "group_neutralize(rank( (star_ebitda_analyst_number_fy1 + star_val_earnings_projection_fy12) / star_rev_surprise_prediction_fy2 ), market)", "group_neutralize(rank( (star_ccr_region_rank + star_arm_global_rank) / star_eps_surprise_prediction_fy1 ), sector)", "group_neutralize(rank( (star_ccr_region_rank + star_arm_global_rank) / star_eps_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (income_tax + cashflow_op) / vwap ), subindustry)", "group_neutralize(rank( (income_tax + cashflow_op) / vwap ), industry)", "group_neutralize(rank( (income_tax + cashflow_op) / vwap ), sector)", "group_neutralize(rank( (income_tax + cashflow_op) / vwap ), market)", "group_neutralize(rank( (liabilities_oth + star_sr_growth) / close ), subindustry)", "group_neutralize(rank( (liabilities_oth + star_sr_growth) / close ), industry)", "group_neutralize(rank( (split + subindustry) / star_eps_fy1_enddate ), subindustry)", "group_neutralize(rank( (star_sr_liquidity + star_val_pcf) / star_ebitda_fq2_enddate ), subindustry)", "group_neutralize(rank( (star_sr_liquidity + star_val_pcf) / star_ebitda_fq2_enddate ), industry)", "group_neutralize(rank( (star_sr_liquidity + star_val_pcf) / star_ebitda_fq2_enddate ), sector)", "group_neutralize(rank( (star_sr_liquidity + star_val_pcf) / star_ebitda_fq2_enddate ), market)", "group_neutralize(rank( (star_ebitda_fy2_enddate + EBITDA) / industry ), industry)", "group_neutralize(rank( (star_arm_secondary_earnings_score + star_eps_analyst_number_fy2) / star_arm_score_5 ), subindustry)", "group_neutralize(rank( (star_arm_secondary_earnings_score + star_eps_analyst_number_fy2) / star_arm_score_5 ), industry)", "group_neutralize(rank( (star_arm_secondary_earnings_score + star_eps_analyst_number_fy2) / star_arm_score_5 ), sector)", "group_neutralize(rank( (star_arm_secondary_earnings_score + star_eps_analyst_number_fy2) / star_arm_score_5 ), market)", "group_neutralize(rank( (star_val_earnings_projection_fy14 + eps) / star_rev_surprise_prediction_fy1 ), industry)", "group_neutralize(rank( (star_val_earnings_projection_fy14 + eps) / star_rev_surprise_prediction_fy1 ), market)", "group_neutralize(rank( (star_eps_surprise_prediction_12m + star_rev_surprise_prediction_fy1) / star_eps_analyst_number_fq1 ), industry)", "group_neutralize(rank( (star_eps_surprise_prediction_12m + star_rev_surprise_prediction_fy1) / star_eps_analyst_number_fq1 ), sector)", "group_neutralize(rank( depre / star_ebitda_surprise_prediction_fy2 ), market)", "group_neutralize(rank( (star_rev_surprise_prediction_fq1 - star_val_implied10_eps_cagr) / star_arm_revenue_score ), subindustry)", "group_neutralize(rank( (cap - star_arm_global_rank) / star_eps_surprise_prediction_12m ), subindustry)", "group_neutralize(rank( ppent / star_ebitda_surprise_prediction_fy1 ), sector)", "group_neutralize(rank( (star_rev_smart_estimate_fq2 - cap) / cash_st ), subindustry)", "group_neutralize(rank( (star_rev_surprise_prediction_fq1 - star_val_implied10_eps_cagr) / star_arm_revenue_score ), industry)", "group_neutralize(rank( depre / star_ebitda_surprise_prediction_fy2 ), sector)", "group_neutralize(rank( (EBITDA - eps) / star_val_earnings_measure_type ), sector)", "group_neutralize(rank( (EBITDA - eps) / star_val_earnings_measure_type ), market)",  "group_neutralize(rank( ppent / star_ebitda_surprise_prediction_fy1 ), market)"]
# def transfer(alpha_codes, num_thread):
#     for alpha_code in alpha_codes[num_thread]:
#         alpha_id = simulator.simulate_alpha(sess, alpha_code, "TOP1000", "ASI", num_thread)
#         alpha_info = utils.get_alpha_info(alpha_id, sess)
#         alpha_info["self_corr"] = utils.check_selfcorr(alpha_id, sess)
#         alpha_info["prod_corr"] = utils.check_prodcorr(alpha_id, sess)
#         print(alpha_info)
#         utils.db_insert_signals(alpha_info)

alpha_ids = ['3gv8AXP','derrLoJ', 'EoP9xdJ', 'EoPxoGG', 'JRaq0ql', 'meWW911', 'NklYOVw', 'QmRPmQp', 'zX7qXW8', 'zXneXN1']
for alpha_id in alpha_ids:
    alpha_info = utils.get_alpha_info(alpha_id, sess)
    alpha_info["self_corr"] = utils.check_selfcorr(alpha_id, sess)
    alpha_info["prod_corr"] = utils.check_prodcorr(alpha_id, sess)
    utils.db_insert_combo(alpha_info)
    utils.change_name(alpha_id, sess, "signal")


